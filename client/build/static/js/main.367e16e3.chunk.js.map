{"version":3,"sources":["reducers/itemReducer.js","reducers/index.js","action/types.js","store.js","components/navbar/navbar.js","action/itemActions.js","components/ItemModal/ItemModal.js","components/EditItemModal/EditItemModal.js","components/shoppingList/ShoppingList.js","App.js","serviceWorker.js","index.js"],"names":["initState","items","loaded","combineReducers","item","state","arguments","length","undefined","action","console","log","type","Object","objectSpread","payload","filter","_id","concat","toConsumableArray","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","NavigationBar","_useState","useState","_useState2","slicedToArray","isOpen","setIsOpen","react_default","a","createElement","Navbar","color","dark","expand","className","Container","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","addItem","dispatch","axios","post","then","res","data","setItemsLoading","connect","_ref","modal","SetModal","NewName","SetNewName","_useState3","_useState4","NewQuantity","SetNewQuantity","toggle","Modal","centered","ModalHeader","ModalBody","Form","onSubmit","e","preventDefault","name","quantity","FormGroup","Label","for","Input","id","placeholder","onChange","target","value","Button","style","marginTop","block","EditModal","SetEditModal","EditName","EditQuantity","SetEditQuantity","display","alignItems","justifyContent","textAlign","defaultValue","ShoppingList","getItems","deleteItem","SetEditName","_useState5","_useState6","_useState7","_useState8","toggleEdit","marginBottom","components_EditItemModal_EditItemModal","components_ItemModal_ItemModal","ListGroup","react_responsive_default","maxDeviceWidth","matches","TransitionGroup","map","_ref2","date","CSSTransition","key","timeout","classNames","ListGroupItem","Row","Col","xs","size","Date","toLocaleString","paddingLeft","_ref3","PropsTypes","func","isRequired","object","get","delete","App","es","components_shoppingList_ShoppingList","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.367e16e3.chunk.js","sourcesContent":["import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from '../action/types';\n\n\nconst initState = {\n    items: [],\n    loaded: false\n};\n\n\nexport default function(state = initState , action){\n    console.log(action.type);\n    switch(action.type){\n        \n        case GET_ITEMS:\n            return{\n                ...state,\n                items: action.payload,\n                loaded: false\n            };\n        case DELETE_ITEM:\n            return{\n            ...state,\n            items: state.items.filter(item => item._id !== action.payload)\n            }\n        case ITEMS_LOADING:\n            return{\n            ...state,\n            loaded: true\n            }\n        case ADD_ITEM:\n            return{\n            ...state,\n            items: [action.payload, ...state.items]\n            }\n        default:\n            return state;\n    }\n}","import {  combineReducers } from 'redux';\nimport itemReducer from './itemReducer';\n\nexport default combineReducers({\n    item: itemReducer\n});","export const GET_ITEMS = 'GET_ITEMS';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const ITEMS_LOADING = 'ITEMS_LOADING'","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, initialState, compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\n\nexport default store;","import React, { useState } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Container\n} from 'reactstrap';\n\nconst NavigationBar = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    \n    const toggle = () => {\n        setIsOpen(!isOpen);\n    };\n\n    return(\n    <div>\n        <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\n            <Container>\n                <NavbarBrand href=\"/\">Shopping List</NavbarBrand>\n                    <NavbarToggler onClick = { toggle } />\n                    <Collapse isOpen={ isOpen } navbar>\n                        <Nav className=\"ml-auto\" navbar> \n                            <NavItem>\n                                <NavLink href=\"/\">Home</NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n            </Container>\n        </Navbar>\n    </div> \n    );\n};\n\nexport default NavigationBar;","import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from './types';\nimport axios from 'axios';\n\nexport const getItems = () => dispatch => {\n    dispatch(setItemsLoading())\n    axios.get('api/items')\n        .then(res => dispatch({\n            type: GET_ITEMS,\n            payload: res.data\n        }));\n};\n\nexport const deleteItem = id => dispatch => {\n    axios.delete(`/api/items/${id}`)\n    .then(res => dispatch({\n        type: DELETE_ITEM,\n        payload: id\n    })\n    );\n};\n\nexport const addItem = item => dispatch => {\n    axios.post('/api/items', item)\n    .then(res => dispatch({\n        type: ADD_ITEM,\n        payload: res.data\n    }))\n};\n\nexport const setItemsLoading = () => {\n    return{\n        type: ITEMS_LOADING\n    };\n};","import React, { useState } from 'react';\nimport{\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../action/itemActions';\n\nconst ItemModal = ({ addItem, modal, SetModal }) => {\n    const [NewName, SetNewName] = useState('');\n    const [NewQuantity, SetNewQuantity] = useState(1);\n\n    const toggle = () => {\n        SetModal(!modal);\n    };\n\n    const onChangeName = (e) => {\n        SetNewName(e.target.value) \n    };\n\n    const onChangeQuantity = (e) => {\n        SetNewQuantity(e.target.value);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const newItem = {\n            name: NewName,\n            quantity: NewQuantity\n        }\n\n        addItem(newItem);\n\n        toggle();\n    };\n    return(\n        <div>\n            <Modal isOpen={modal} toggle={toggle} centered>\n                <ModalHeader toggle={toggle}>\n                    Add To List\n                </ModalHeader>\n                <ModalBody>\n                    <Form onSubmit={onSubmit}>\n                        <FormGroup>\n                            <Label for=\"item\">\n                                Item Name\n                            </Label>\n                            <Input \n                                type=\"text\" \n                                name=\"name\" \n                                id=\"item\" \n                                placeholder=\"Set Item Name\"\n                                onChange={onChangeName}\n                                />\n                            <Label for=\"item\">\n                                Quantity\n                            </Label>\n                            <Input \n                                type=\"text\" \n                                name=\"Quantity\" \n                                id=\"quantity\" \n                                placeholder=\"Set Quantity\"\n                                onChange={onChangeQuantity}\n                                />\n                            <Button color=\"dark\" style={{marginTop: '2rem'}} block>\n                                Add\n                            </Button>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n};\n\n\n\nconst mapStateToProps = state => ({\n    item: state.item\n});\n\nexport default connect(mapStateToProps, { addItem })(ItemModal);","import React, { useState } from 'react';\nimport{\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n} from 'reactstrap';\n//import MediaQuery from 'react-responsive';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../action/itemActions';\nimport './EditItemModal.css';\n\nconst EditItemModal = ({ addItem, EditModal, SetEditModal, EditName, EditQuantity, SetEditQuantity }) => {\n    \n    const toggle = () => {\n        SetEditModal(!EditModal);\n    };\n\n    const onChangeQuantity = (e) => {\n        SetEditQuantity(e.target.value);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const newItem = {\n            name: EditName,\n            quantity: EditQuantity\n        }\n\n        addItem(newItem);\n\n        toggle();\n    };\n    return(\n        <div>\n            <Modal isOpen={EditModal} toggle={toggle} centered>\n                <ModalHeader toggle={toggle}>\n                    Edit Item\n                </ModalHeader>\n                <ModalBody>\n                    <Form onSubmit={onSubmit}>\n                        <FormGroup>\n                            <div style={{\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                            }}>\n                                <Label style={{textAlign: \"center\"}} for=\"item\">\n                                    {EditName}\n                                </Label>\n                            </div>\n                            <br></br>\n                            <Input \n                                defaultValue={EditQuantity}\n                                type=\"text\" \n                                name=\"Quantity\" \n                                id=\"item\" \n                                onChange={onChangeQuantity}\n                                />\n                            <Button color=\"dark\" style={{marginTop: '2rem'}} block>\n                                Add\n                            </Button>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n};\n\n\n\nconst mapStateToProps = state => ({\n    item: state.item\n});\n\nexport default connect(mapStateToProps, { addItem })(EditItemModal);","import React, { useState } from 'react';\nimport{\n    Container,\n    ListGroup,\n    ListGroupItem,\n    Button,\n    Row,\n    Col\n} from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ItemModal from '../ItemModal/ItemModal';\nimport './ShoppingList.css';\nimport { connect } from 'react-redux';\nimport { getItems, deleteItem } from '../../action/itemActions';\nimport EditItemModal from '../EditItemModal//EditItemModal';\nimport PropsTypes from 'prop-types';\nimport MediaQuery from 'react-responsive';\n\nconst ShoppingList = ({ getItems, item, deleteItem }) => {\n    const [modal, SetModal] = useState(false);\n    const [EditName, SetEditName] = useState('');\n    const [EditQuantity, SetEditQuantity] = useState(1);\n    const [EditModal, SetEditModal] = useState(false);\n\n    const toggle = () => {\n        SetModal(!modal);\n    };\n\n    const toggleEdit = () => {\n        SetEditModal(!EditModal);\n    };\n\n    useState( () => {\n        getItems();\n    })\n\n    return(\n        <Container>\n            <Button color='dark' style={{marginBottom: '2rem'}} onClick={toggle}>\n                Add Item \n            </Button>\n            <EditItemModal EditModal={EditModal} SetEditModal={SetEditModal} EditName={EditName} EditQuantity={EditQuantity} SetEditQuantity={SetEditQuantity}></EditItemModal>\n            <ItemModal modal={modal} SetModal={SetModal}></ItemModal>\n            <ListGroup>\n            <MediaQuery maxDeviceWidth={550}>\n                {(matches) => {\n                    if (matches) {\n                        return (\n                            <TransitionGroup className=\"shopping-list\">\n                            {item.items.map(({ _id, name, quantity, date }) => (\n                               <CSSTransition key={_id} timeout={500} classNames=\"fade\" >\n                                   <ListGroupItem>\n                                       <Row>\n                                        <Col xs=\"1\">\n                                            <Button style={{marginTop: \"1.8rem\"}} className=\"remove-btn\" color=\"danger\" size=\"sm\" onClick={ () => {\n                                                deleteItem(_id);\n                                                }}>\n                                                &times;\n                                            </Button>\n                                        </Col>\n                                        <Col style={{marginTop: \"2rem\"}} xs=\"4\">\n                                            {name}\n                                        </Col>\n                                        <Col style={{marginTop: \"0.2rem\", textAlign: \"center\"}} xs=\"2\">\n                                            {\"Last Update: \" + new Date(date).toLocaleString()}\n                                        </Col>\n                                        <Col style={{marginTop: \"2rem\", paddingLeft: \"4rem\"}} xs=\"3\">\n                                            <Button color=\"link\" size=\"sm\" onClick={ () => {\n                                                SetEditName(name);\n                                                SetEditQuantity(quantity);\n                                                deleteItem(_id);\n                                                toggleEdit();\n                                            }}>\n                                                {quantity}\n                                            </Button>\n                                        </Col>\n                                        </Row>\n                                   </ListGroupItem>\n                               </CSSTransition>\n                            ))}\n                        </TransitionGroup>\n                        );\n                    } else {\n                        return (\n                                            <TransitionGroup className=\"shopping-list\">\n                    {item.items.map(({ _id, name, quantity, date }) => (\n                       <CSSTransition key={_id} timeout={500} classNames=\"fade\" >\n                           <ListGroupItem>\n                               <Row>\n                                <Col xs=\"1\">\n                                    <Button style={{}} className=\"remove-btn\" color=\"danger\" size=\"sm\" onClick={ () => {\n                                        deleteItem(_id);\n                                        }}>\n                                        &times;\n                                    </Button>\n                                </Col>\n                                <Col style={{marginTop: \"0.2rem\"}} xs=\"3\">\n                                    {name}\n                                </Col>\n                                <Col style={{marginTop: \"0.2rem\", textAlign: \"center\"}} xs=\"6\">\n                                    {\"Last Update: \" + new Date(date).toLocaleString()}\n                                </Col>\n                                <Col xs=\"2\">\n                                    <Button color=\"link\" size=\"sm\" onClick={ () => {\n                                        SetEditName(name);\n                                        SetEditQuantity(quantity);\n                                        deleteItem(_id);\n                                        toggleEdit();\n                                    }}>\n                                        {quantity}\n                                    </Button>\n                                </Col>\n                                </Row>\n                           </ListGroupItem>\n                       </CSSTransition>\n                    ))}\n                </TransitionGroup>\n                        )\n                    }\n                 }}\n            </MediaQuery>\n            </ListGroup>\n        </Container>\n    );\n};\n\nShoppingList.PropsTypes = ({\n    getItems: PropsTypes.func.isRequired,\n    item: PropsTypes.object.isRequired\n});\nconst maoStateToProps = (state) => ({\n    item: state.item\n})\n\n\n\nexport default connect(maoStateToProps, { getItems, deleteItem })(ShoppingList);","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport NavigationBar from './components/navbar/navbar';\nimport ShoppingList from './components/shoppingList/ShoppingList';\nimport { Container } from 'reactstrap';\nfunction App() {\n  return (\n  <Provider store={store}>\n    <div className=\"App\">\n      <NavigationBar></NavigationBar>\n      <Container>\n        <ShoppingList></ShoppingList>\n      </Container>\n    </div>\n  </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}